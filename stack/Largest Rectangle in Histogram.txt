class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        stack<int> st;
        int l=heights.size();
        vector<int> left,right(l);
        for(int i=0;i<l;i++){
            if(st.empty()){
                left.push_back(0);
            }else{
                while(!st.empty()&&heights[st.top()]>=heights[i])st.pop();
                if(st.empty()){
                   left.push_back(0);
                }
                else {
                    left.push_back(st.top()+1);
                }
            }
            st.push(i);
        }
       stack<int> st2;
        for(int i=l-1;i>=0;i--){
            if(st2.empty()){
                right[i]=l-1;
            }else{
                while(!st2.empty()&&heights[st2.top()]>=heights[i])st2.pop();
                if(st2.empty()){
                    right[i]=l-1;
                }else{
                    right[i]=st2.top()-1;
                }
            }
            st2.push(i);
        }
        for(int val:left)cout<<val<<" ";
        cout<<endl;
        for(int val:right)cout<<val<<" ";
        int ans=0;
        for(int i=0;i<l;i++){
            ans=max(ans,heights[i]*(right[i]-left[i]+1));
        }
        return ans;
    }
};
