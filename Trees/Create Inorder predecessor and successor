/*************************************************************

    Following is the Binary Tree node structure
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };

*************************************************************/

pair<int, int> predecessorSuccessor(TreeNode *root, int key)
{
    TreeNode *predecessor=NULL,*successor=NULL,*temp=root;
    while(temp){
        if(key>=temp->data){
            temp=temp->right;
        }else{
            successor=temp;
            temp=temp->left;
        }
    }
    while(root){
        if(key>root->data){
            predecessor=root;
            root=root->right;
        }else{
            root=root->left;
        }
    }
    int pval,sval;
    pval=(predecessor)?predecessor->data:-1;
    sval=(successor)?successor->data:-1;
    return make_pair(pval,sval);
 
}
