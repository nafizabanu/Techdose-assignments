class Solution {
public:
   vector<int> generateSubs(int s,int e,vector<int> &nums){
       int l=e-s;
       vector<int> ans;
       for(int i=0;i<(1<<l);i++){
           int sum=0;
           for(int j=0;j<l;j++){
               if(i&(1<<j)){
                   sum+=nums[j+s];
               }
           }
           ans.push_back(sum);
       }
       return ans;
   }
    int minAbsDifference(vector<int>& nums, int goal) {
        vector<int> arr1,arr2;
        int n=nums.size();
        arr1=generateSubs(0,n/2,nums);
        arr2=generateSubs(n/2,n,nums);
        sort(arr2.begin(),arr2.end());
        int ans=INT_MAX;
        for(int i=0; i<arr1.size(); i++) {   
            int j = lower_bound(arr2.begin(), arr2.end(), goal - arr1[i]) - arr2.begin();
            if(j > 0)ans = min(ans, abs(goal - arr2[j - 1] - arr1[i]));            if(j < arr2.size())ans = min(ans, abs(goal - arr2[j] - arr1[i]));
        }
       return ans;
    }
};
