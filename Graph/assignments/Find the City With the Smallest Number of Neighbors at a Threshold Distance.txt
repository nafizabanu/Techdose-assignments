class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> cost(n,vector<int>(n,1e5));
        for(auto it:edges){
             cost[it[0]][it[1]]=it[2];
             cost[it[1]][it[0]]=it[2];
        }
        for(int i=0;i<n;i++){
           cost[i][i]=0;
        }
        for(int via=0;via<n;via++){
            for(int u=0;u<n;u++){
                for(int v=0;v<n;v++){
                    cost[u][v]=min(cost[u][v],cost[u][via]+cost[via][v]);
                }
            }
        }
        int ans=INT_MAX,node=-1;
        for(int i=0;i<n;i++){
            int cnt=0;
            for(int j=0;j<n;j++){
                if(cost[i][j]<=distanceThreshold)cnt++;
            }
            if(cnt<=ans){
                ans=cnt;
                node=i;
            }
           
        }
        return node;
    }
};
